<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd">
 
    
	<http disable-url-rewriting="true">
		<headers disabled="true"/>
		<csrf disabled="true"/>
 		
		<intercept-url pattern="/login" access="permitAll"/>
		<intercept-url pattern="/loginPage" access="permitAll"/>
		<intercept-url pattern="/" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/searchResults" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/search" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"/>
 
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
 
		<form-login login-page="/loginPage" 
		    default-target-url="/search" 
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password"/>
		<logout logout-url="/j_spring_security_logout"/>
		
	</http>
 
	<!-- Select users and user_roles from database -->
	<authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select username,password, enabled from users where username=?"
		  authorities-by-username-query=
		    "select u.username, ga.authority from users u, group_members gm, group_authorities ga
		    where u.username = gm.username
		    and gm.group_id = ga.group_id
		    and u.username =?  " />
	  </authentication-provider>
	</authentication-manager>
 
</beans:beans>